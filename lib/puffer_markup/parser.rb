#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require 'puffer_markup/lexer'
module PufferMarkup
  class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 54)
  def initialize string
    @lexer = Lexer.new(string)
    @tokens = @lexer.tokens
    @position = -1
  end

  def parse
    do_parse
  end

  def next_token
    @position = @position + 1
    @tokens[@position] || [false, false]
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     9,     8,    57,    58,    55,    10,     2,    12,    13,    14,
    15,    16,    17,    18,    19,    20,     9,     8,    21,    61,
    60,    10,    59,    12,    13,    14,    15,    16,    17,    18,
    19,    20,     9,     8,    21,    64,     4,    10,    61,    12,
    13,    14,    15,    16,    17,    18,    19,    20,     9,     8,
    21,    31,    32,    10,    19,    12,    13,    14,    15,    16,
    17,    18,    19,    20,     9,     8,    21,    31,    32,    10,
    60,    12,    13,    14,    15,    16,    17,    18,    19,    20,
     9,     8,    21,    55,    68,    10,    30,    12,    13,    14,
    15,    16,    17,    18,    19,    20,     9,     8,    21,    29,
     3,    10,    60,    12,    13,    14,    15,    16,    17,    18,
    19,    20,     9,     8,    21,   nil,   nil,    10,   nil,    12,
    13,    14,    15,    16,    17,    18,    19,    20,     9,     8,
    21,   nil,   nil,    10,   nil,    12,    13,    14,    15,    16,
    17,    18,    19,    20,     9,     8,    21,   nil,   nil,    10,
   nil,    12,    13,    14,    15,    16,    17,    18,    19,    20,
    40,    19,    21,     9,     8,   nil,    42,   nil,    10,   nil,
    12,    13,    14,    15,    16,    17,    18,    19,    20,     9,
     8,    21,   nil,   nil,    46,   nil,    12,    13,    14,    15,
    16,    17,    18,    19,    20,     9,     8,    21,   nil,   nil,
    10,   nil,    12,    13,    14,    15,    16,    17,    18,    19,
    20,     9,     8,    21,   nil,   nil,    10,   nil,    12,    13,
    14,    15,    16,    17,    18,    19,    20,     9,     8,    21,
   nil,   nil,    10,   nil,    12,    13,    14,    15,    16,    17,
    18,    19,    20,   nil,   nil,    21,    31,    32,    33,    34,
    31,    32,    33,    34,    56,   nil,   nil,   nil,    56,    31,
    32,    33,    34,    31,    32,    33,    34,    31,    32,    33,
    34,    31,    32,    33,    34 ]

racc_action_check = [
    32,    32,    41,    41,    49,    32,     0,    32,    32,    32,
    32,    32,    32,    32,    32,    32,    55,    55,    32,    49,
    43,    55,    43,    55,    55,    55,    55,    55,    55,    55,
    55,    55,     2,     2,    55,    47,     2,     2,    45,     2,
     2,     2,     2,     2,     2,     2,     2,     2,    46,    46,
     2,    54,    54,    46,    60,    46,    46,    46,    46,    46,
    46,    46,    46,    46,    64,    64,    46,    53,    53,    64,
    48,    64,    64,    64,    64,    64,    64,    64,    64,    64,
    58,    58,    64,    36,    63,    58,     5,    58,    58,    58,
    58,    58,    58,    58,    58,    58,     8,     8,    58,     3,
     1,     8,    69,     8,     8,     8,     8,     8,     8,     8,
     8,     8,     9,     9,     8,   nil,   nil,     9,   nil,     9,
     9,     9,     9,     9,     9,     9,     9,     9,    10,    10,
     9,   nil,   nil,    10,   nil,    10,    10,    10,    10,    10,
    10,    10,    10,    10,    20,    20,    10,   nil,   nil,    20,
   nil,    20,    20,    20,    20,    20,    20,    20,    20,    20,
    20,    21,    20,    61,    61,   nil,    21,   nil,    61,   nil,
    61,    61,    61,    61,    61,    61,    61,    61,    61,    27,
    27,    61,   nil,   nil,    27,   nil,    27,    27,    27,    27,
    27,    27,    27,    27,    27,    33,    33,    27,   nil,   nil,
    33,   nil,    33,    33,    33,    33,    33,    33,    33,    33,
    33,    34,    34,    33,   nil,   nil,    34,   nil,    34,    34,
    34,    34,    34,    34,    34,    34,    34,    31,    31,    34,
   nil,   nil,    31,   nil,    31,    31,    31,    31,    31,    31,
    31,    31,    31,   nil,   nil,    31,    62,    62,    62,    62,
    38,    38,    38,    38,    62,   nil,   nil,   nil,    38,    39,
    39,    39,    39,    67,    67,    67,    67,    65,    65,    65,
    65,     7,     7,     7,     7 ]

racc_action_pointer = [
    -5,   100,    24,    99,   nil,    74,   nil,   265,    88,   104,
   120,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   136,   139,   nil,   nil,   nil,   nil,   nil,   171,   nil,   nil,
   nil,   219,    -8,   187,   203,   nil,    70,   nil,   244,   253,
   nil,   -22,   nil,    -5,   nil,    10,    40,    10,    45,    -9,
   nil,   nil,   nil,    61,    45,     8,   nil,   nil,    72,   nil,
    32,   155,   240,    70,    56,   261,   nil,   257,   nil,    77 ]

racc_action_default = [
   -42,   -42,   -42,   -42,    -1,   -42,    -3,    -4,   -42,   -42,
   -42,   -12,   -13,   -14,   -15,   -16,   -17,   -18,   -19,   -20,
   -42,   -42,   -30,   -31,   -32,   -33,   -34,   -35,   -36,    70,
    -2,   -42,   -42,   -42,   -42,    -9,   -35,   -10,   -42,   -24,
   -21,   -42,   -25,   -42,   -28,   -42,   -42,   -37,   -38,   -35,
   -41,    -5,    -6,    -7,    -8,   -42,   -11,   -22,   -42,   -26,
   -42,   -42,   -24,   -42,   -42,   -23,   -27,   -29,   -40,   -39 ]

racc_goto_table = [
    27,     7,     1,    43,     6,    41,     5,    35,    37,    38,
    66,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    45,
   nil,   nil,   nil,   nil,   nil,    49,   nil,   nil,   nil,   nil,
    51,    52,    53,    54,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    49,    62,    69,   nil,   nil,   nil,
   nil,   nil,   nil,    49,   nil,   nil,   nil,    65,    45,   nil,
    67,   nil,    49,    65 ]

racc_goto_check = [
     9,     4,     1,    13,     3,    11,     2,     4,     4,     4,
    14,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     9,
   nil,   nil,   nil,   nil,   nil,     9,   nil,   nil,   nil,   nil,
     4,     4,     4,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     9,     4,    13,   nil,   nil,   nil,
   nil,   nil,   nil,     9,   nil,   nil,   nil,     4,     9,   nil,
     4,   nil,     9,     4 ]

racc_goto_pointer = [
   nil,     2,     4,     2,    -1,   nil,   nil,   nil,   nil,    -2,
   nil,   -15,   nil,   -18,   -50,   nil,   -16 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    39,    11,    22,    23,    24,    36,
    25,    47,    26,    48,    44,    28,    63 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 30, :_reduce_1,
  3, 30, :_reduce_2,
  1, 31, :_reduce_none,
  1, 31, :_reduce_none,
  3, 33, :_reduce_5,
  3, 33, :_reduce_6,
  3, 33, :_reduce_7,
  3, 33, :_reduce_8,
  2, 33, :_reduce_9,
  2, 33, :_reduce_10,
  3, 33, :_reduce_11,
  1, 33, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 36, :_reduce_none,
  1, 36, :_reduce_none,
  1, 37, :_reduce_none,
  1, 37, :_reduce_none,
  1, 38, :_reduce_20,
  2, 39, :_reduce_21,
  3, 39, :_reduce_22,
  3, 40, :_reduce_23,
  1, 40, :_reduce_24,
  2, 41, :_reduce_25,
  3, 41, :_reduce_26,
  3, 42, :_reduce_27,
  1, 42, :_reduce_28,
  3, 43, :_reduce_29,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 34, :_reduce_none,
  1, 45, :_reduce_37,
  1, 45, :_reduce_38,
  3, 45, :_reduce_39,
  4, 44, :_reduce_40,
  2, 32, :_reduce_41 ]

racc_reduce_n = 42

racc_shift_n = 70

racc_token_table = {
  false => 0,
  :error => 1,
  :COMMAND => 2,
  :UMINUS => 3,
  :UPLUS => 4,
  :NOT => 5,
  :MULTIPLY => 6,
  :DIVIDE => 7,
  :PLUS => 8,
  :MINUS => 9,
  :ASSIGN => 10,
  :TOPEN => 11,
  :TCLOSE => 12,
  :BOPEN => 13,
  :BCLOSE => 14,
  :NIL => 15,
  :TRUE => 16,
  :FALSE => 17,
  :INTEGER => 18,
  :FLOAT => 19,
  :STRING => 20,
  :REGEXP => 21,
  :IDENTIFER => 22,
  :AOPEN => 23,
  :ACLOSE => 24,
  :COMMA => 25,
  :HOPEN => 26,
  :HCLOSE => 27,
  :COLON => 28 }

racc_nt_base = 29

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "COMMAND",
  "UMINUS",
  "UPLUS",
  "NOT",
  "MULTIPLY",
  "DIVIDE",
  "PLUS",
  "MINUS",
  "ASSIGN",
  "TOPEN",
  "TCLOSE",
  "BOPEN",
  "BCLOSE",
  "NIL",
  "TRUE",
  "FALSE",
  "INTEGER",
  "FLOAT",
  "STRING",
  "REGEXP",
  "IDENTIFER",
  "AOPEN",
  "ACLOSE",
  "COMMA",
  "HOPEN",
  "HCLOSE",
  "COLON",
  "$start",
  "tag",
  "statement",
  "command",
  "expr",
  "value",
  "const",
  "number",
  "string",
  "identifer",
  "array",
  "params",
  "hash",
  "pairs",
  "pair",
  "function",
  "arguments" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 10)
  def _reduce_1(val, _values, result)
     result = Node.build :TAG 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_2(val, _values, result)
     result = Node.build :TAG, val[1] 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.y', 16)
  def _reduce_5(val, _values, result)
     result = Node.build :MULTIPLY, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_6(val, _values, result)
     result = Node.build :DIVIDE, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_7(val, _values, result)
     result = Node.build :PLUS, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 19)
  def _reduce_8(val, _values, result)
     result = Node.build :MINUS, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_9(val, _values, result)
     result = Node.build :UMINUS, val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_10(val, _values, result)
     result = Node.build :UPLUS, val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_11(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_20(val, _values, result)
     result = Node.build :IDENTIFER, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_21(val, _values, result)
     result = Node.build :ARRAY 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 31)
  def _reduce_22(val, _values, result)
     result = Node.build :ARRAY, val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 32)
  def _reduce_23(val, _values, result)
     val[0].children.push(val[2]); result = val[0]  
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_24(val, _values, result)
     result = Node.build :PARAMS, val[0]  
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_25(val, _values, result)
     result = Node.build :HASH 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_26(val, _values, result)
     result = Node.build :HASH, val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_27(val, _values, result)
     val[0].children.push(val[2]); result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_28(val, _values, result)
     result = Node.build :PAIRS, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 39)
  def _reduce_29(val, _values, result)
     result = Node.build :PAIR, val[0], val[2] 
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.y', 43)
  def _reduce_37(val, _values, result)
     result = Node.build :ARGUMENTS, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_38(val, _values, result)
     result = Node.build :ARGUMENTS, val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_39(val, _values, result)
     result = Node.build :ARGUMENTS, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_40(val, _values, result)
     result = Node.build :FUNCTION, val[0], val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_41(val, _values, result)
     result = Node.build :FUNCTION, val[0], val[1] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module PufferMarkup
